#include "Arduboy.h"

// global Arduboy instance

Arduboy arduboy;

// define frame rate

#define FRAME_RATE 24

// define draw color

#define COLOR WHITE

// Frogger bitmap

  const uint8_t PROGMEM frogger_bitmap[] = {0x46, 0x20, 0xCF, 0x30, 0x56, 0xA0, 0x7F, 0xE0, 
  0x1F, 0x80, 0x1F, 0x80, 0x17, 0x80, 0x77, 0xE0, 
  0x5B, 0xA0, 0x4F, 0x20, 0xE6, 0x70, 0x40, 0x20, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// struct definition for frogger

typedef struct frogger_t {

  int x;
  int y;
  int h = 12;
  int w = 12;
  const uint8_t PROGMEM *bitmap = frogger_bitmap;
} Frogger;

// struct definition for obstacles
// acts as linked list node
typedef struct obstacle_t {

  int x_min;      // x coordinate of left of obstacle
  int x_max;      // x coordinate of right of obstacle
  struct obstacle_t *next; // pointer to next obstacle
} Obstacle;

// struct definition for obstacle row
// acts as linked list
struct obstacle_row_t {

  int y;          // position on screen
  int row_speed;  // positive or negative indicates direction
  int type;       // index of bitmap in bitmap array
  Obstacle *head; // pointer to head obstacle (closest to going offscreen)
} Row;

  // racecar bitmap

  const uint8_t PROGMEM racecar[] = {0x1E, 0x1C, 0x00, 0x7F, 0x7F, 0x00, 0xB1, 0xF1, 
  0xC0, 0xE1, 0xE1, 0xC0, 0xE3, 0xE1, 0x80, 0xE1, 
  0xE1, 0x80, 0xE1, 0xE1, 0x80, 0xE3, 0xE1, 0x80, 
  0xE1, 0xE1, 0xC0, 0xB1, 0xF1, 0xC0, 0x7F, 0x7F, 
  0x00, 0x1E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

  // van bitmap

  const uint8_t PROGMEM van[] = {0x1E, 0x1C, 0x00, 0x7F, 0x7F, 0x00, 0xB1, 0xF1, 
  0xC0, 0xE1, 0xE1, 0xC0, 0xE3, 0xE1, 0x80, 0xE1, 
  0xE1, 0x80, 0xE1, 0xE1, 0x80, 0xE3, 0xE1, 0x80, 
  0xE1, 0xE1, 0xC0, 0xB1, 0xF1, 0xC0, 0x7F, 0x7F, 
  0x00, 0x1E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

  // short_truck bitmap

  const uint8_t PROGMEM short_truck[] = {0x38, 0x0E, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x00, 
  0xF8, 0x80, 0x00, 0xCC, 0xFF, 0xFF, 0xD3, 0x80, 
  0x00, 0xD3, 0x80, 0x00, 0xD3, 0xFF, 0xFF, 0xD3, 
  0x80, 0x00, 0xCC, 0x80, 0x00, 0xF8, 0xFF, 0xFF, 
  0x80, 0x38, 0x0E, 0x00};

  // long_truck bitmap

  const uint8_t PROGMEM long_truck[] = {0x3B, 0x80, 0x01, 0xC0, 0x00, 0xFF, 0xFF, 0xFF, 
  0xE0, 0x00, 0x80, 0x00, 0x00, 0x27, 0x80, 0x80, 
  0x00, 0x00, 0x3C, 0xC0, 0xFF, 0xFF, 0xFF, 0xFD, 
  0x30, 0x80, 0x00, 0x00, 0x25, 0x30, 0x80, 0x00, 
  0x00, 0x25, 0x30, 0xFF, 0xFF, 0xFF, 0xFD, 0x30, 
  0x80, 0x00, 0x00, 0x3C, 0xC0, 0x80, 0x00, 0x00, 
  0x27, 0x80, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x3B, 
  0x80, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00};

  // array of bitmap types
  const uint8_t PROGMEM * const bitmaps[] = {racecar, van, short_truck, long_truck};

  // instantiate Frogger
  Frogger frogger;

void setup() {

  // initialize arduboy

  arduboy.begin();

  // set framerate

  arduboy.setFrameRate(FRAME_RATE);

  // set Frogger initial position
  frogger.x = WIDTH/2;
  frogger.y = HEIGHT-frogger.h;
}

void loop() {

  
  // move 1 pixel to the right if the right button is pressed

  if(arduboy.pressed(RIGHT_BUTTON) && (frogger.x < WIDTH - 2*frogger.w)) {

    frogger.x += 12;

  }

  // move 1 pixel to the left if the left button is pressed

  if(arduboy.pressed(LEFT_BUTTON) && (frogger.x > frogger.w)) {

    frogger.x -= 12;

  }

  // move 1 pixel up if the up button is pressed

  if(arduboy.pressed(UP_BUTTON) && (frogger.y > frogger.h)) {

    frogger.y -= 12;

  }

  // move 1 pixel down if the down button is pressed

  if(arduboy.pressed(DOWN_BUTTON) && (frogger.y < HEIGHT - 2*frogger.h)) {

    frogger.y += 12;

  }

  // clear screen

  arduboy.clear();

  // reset x and y

  arduboy.setCursor(frogger.x, frogger.y);

  // draw car bitmap

  arduboy.drawSlowXYBitmap(frogger.x, frogger.y, frogger.bitmap, 12, 12, COLOR);

  // display buffer items on screen

  arduboy.display();
}


