#include "Arduboy.h"
#include <unistd.h>

// global Arduboy instance

Arduboy arduboy;

// game variables

int16_t x, y;

// define frame rate

#define FRAME_RATE 24

// define rectangle size

#define RECT_WIDTH 2

#define RECT_HEIGHT 2

// define draw color

#define COLOR WHITE

// define max values for x and y

#define XMAX (WIDTH - RECT_WIDTH - 1)

#define YMAX (HEIGHT - RECT_HEIGHT - 1)


struct obstacle {

  int X_MIN;
  int X_MAX;
  int type;            // index in array of bitmaps

};

  // frog bitmap

  const uint8_t PROGMEM frog[] = {0x46, 0x20, 0xCF, 0x30, 0x56, 0xA0, 0x7F, 0xE0, 
  0x1F, 0x80, 0x1F, 0x80, 0x17, 0x80, 0x77, 0xE0, 
  0x5B, 0xA0, 0x4F, 0x20, 0xE6, 0x70, 0x40, 0x20, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};


  // racecar bitmap

  const uint8_t PROGMEM racecar[] = {0x1E, 0x1C, 0x00, 0x7F, 0x7F, 0x00, 0xB1, 0xF1, 
  0xC0, 0xE1, 0xE1, 0xC0, 0xE3, 0xE1, 0x80, 0xE1, 
  0xE1, 0x80, 0xE1, 0xE1, 0x80, 0xE3, 0xE1, 0x80, 
  0xE1, 0xE1, 0xC0, 0xB1, 0xF1, 0xC0, 0x7F, 0x7F, 
  0x00, 0x1E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

  // van bitmap

  const uint8_t PROGMEM van[] = {0x1E, 0x1C, 0x00, 0x7F, 0x7F, 0x00, 0xB1, 0xF1, 
0xC0, 0xE1, 0xE1, 0xC0, 0xE3, 0xE1, 0x80, 0xE1, 
0xE1, 0x80, 0xE1, 0xE1, 0x80, 0xE3, 0xE1, 0x80, 
0xE1, 0xE1, 0xC0, 0xB1, 0xF1, 0xC0, 0x7F, 0x7F, 
0x00, 0x1E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

  // short_truck bitmap

  const uint8_t PROGMEM short_truck[] = {0x38, 0x0E, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x00, 
  0xF8, 0x80, 0x00, 0xCC, 0xFF, 0xFF, 0xD3, 0x80, 
  0x00, 0xD3, 0x80, 0x00, 0xD3, 0xFF, 0xFF, 0xD3, 
  0x80, 0x00, 0xCC, 0x80, 0x00, 0xF8, 0xFF, 0xFF, 
  0x80, 0x38, 0x0E, 0x00};

  // long_truck bitmap

  const uint8_t PROGMEM long_truck[] = {0x3B, 0x80, 0x01, 0xC0, 0x00, 0xFF, 0xFF, 0xFF, 
  0xE0, 0x00, 0x80, 0x00, 0x00, 0x27, 0x80, 0x80, 
  0x00, 0x00, 0x3C, 0xC0, 0xFF, 0xFF, 0xFF, 0xFD, 
  0x30, 0x80, 0x00, 0x00, 0x25, 0x30, 0x80, 0x00, 
  0x00, 0x25, 0x30, 0xFF, 0xFF, 0xFF, 0xFD, 0x30, 
  0x80, 0x00, 0x00, 0x3C, 0xC0, 0x80, 0x00, 0x00, 
  0x27, 0x80, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x3B, 
  0x80, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00};


struct obstacle_row {

  int Y;
  int row_speed; // positive for negative
  
};




void setup() {

  // initialize arduboy

  arduboy.begin();

  // set framerate

  arduboy.setFrameRate(FRAME_RATE);

  // set x and y to the middle of the screen

  x = (WIDTH/2) - (RECT_WIDTH/2);

  y = (HEIGHT/2) - (RECT_HEIGHT/2);

}

void loop() {

  
  // move 1 pixel to the right if the right button is pressed

  if(arduboy.pressed(RIGHT_BUTTON) && (x < XMAX)) {

    x++;

  }

  // move 1 pixel to the left if the left button is pressed

  if(arduboy.pressed(LEFT_BUTTON) && (x > 0)) {

    x--;

  }

  // move 1 pixel up if the up button is pressed

  if(arduboy.pressed(UP_BUTTON) && (y > 0)) {

    y -= 12;

  }

  // move 1 pixel down if the down button is pressed

  if(arduboy.pressed(DOWN_BUTTON) && (y < YMAX)) {

    y += 12;

  }

  // clear screen

  arduboy.clear();

  // reset x and y

  arduboy.setCursor(x, y);

  // draw rounded rectangle at position (x, y)

  //arduboy.drawRect(x, y, RECT_WIDTH, RECT_HEIGHT, COLOR);

  // draw car bitmap

  arduboy.drawSlowXYBitmap(x,y, frog, 12, 12, COLOR);

  // display buffer items on screen

  arduboy.display();

  

}


